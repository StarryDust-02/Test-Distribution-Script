README - Test Distribution Script
=================================

Overview
--------
This project provides a Python script to distribute test files to students based on
a CSV database. The script copies test files from the "library" folder and places 
them into an organized output directory structure, grouped by CSV file and student name.


How to Run the Script
---------------------
For convenience, two helper files are provided so you don't need to type Python
commands manually:

- On Windows: double-click `win_run.bat`
- On Mac/Linux: run `./unix_run.sh` from the terminal (you may need to run `chmod +x run.sh` once)

Both files will check for Python 3 automatically:
- On Windows, if Python is not installed, the Microsoft Store will prompt you to install it.
- On Mac/Linux, the script ensures that Python 3 is used (not the legacy Python 2).

The project comes with `class1.csv` for you to test it out by default.


Customization
-------------
- Add more CSV files in `database/` to distribute tests for multiple classes.
- Add additional test files into `library/` for use in assignments (the file names must be unique).


Technical Documentations
=================================

Directory Structure
-------------------
Place the script (`distribute.py`) at the project root. The following folders should 
exist in the same directory:

project/
│
├─ distribute.py
│
├─ library/        <- Contains test files (e.g., test_1.pdf, test_2.pdf)
│
├─ database/       <- Contains CSV files with student-to-test assignments 
│
└─ output/         <- Generated by the script; contains results


CSV File Format
---------------
The CSV files inside the `database/` folder must have the following headers:

    student,test file

Example:

    student,test file
    Alice,test_1.pdf
    Bob,test_2.pdf
    Charlie,test_1.pdf

Each "test file" should exactly match the name of a file in the `library/` folder.


Script Functionality
--------------------
When you run the script:

    python distribute.py

It will:
1. Read each CSV file from `database/`.
2. Create a subdirectory under `output/` named after the CSV file (without `.csv`).
3. Inside each class directory, create a subdirectory for each student.
4. Copy the assigned test file from `library/` into the student's folder.

Example Output (for `class1.csv`):

output/
└─ class1/
   ├─ Alice/
   │   └─ test_1.pdf
   ├─ Bob/
   │   └─ test_2.pdf
   └─ Charlie/
       └─ test_1.pdf


Error Handling
--------------
- If a referenced test file is missing from the `library/` folder, the script will
  print a warning but continue processing other students.
- Existing files in `output/` may be overwritten.

License
-------
This project is free to use, modify, and distribute.

